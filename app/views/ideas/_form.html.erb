<%= simple_form_for(@idea, html: {class: 'form-vertical' }) do |form| %>
		
		<div class="form-group">
			<%= form.input :title, input_html: { class: 'form-control' } %>
		</div>

		<div class="form-group">
			<%= form.input :problem, label: "What problem are you trying to solve?", input_html: { class: 'form-control', rows: '3' } %>
		</div>

		<div class="form-group">
			<%= form.input :description, label: "What's your idea?",  input_html: { class: 'form-control', rows: '10' } %>
		</div>

		<div class="form-group">
			<%= form.input :tag_list, input_html: { class: 'form-control stateinput', data:{role:'tagsinput'}} %>
		</div>


		<div class="form-group text-center">
    		
			<%= form.button :submit, "Submit your idea", data: { disable_with: "Submitting..." }, :class => 'btn btn-primary btn-lg'  %>
			<!--<%= link_to 'Cancel', ideas_path, :class => 'btn' %>-->
			
		</div>

<% end %>

<script>

$(function () {

    // function from typeahead.js example
    var substringMatcher = function (strs) {
        return function findMatches(q, cb) {
            var matches, substringRegex;

            // an array that will be populated with substring matches
            matches = [];

            // regex used to determine if a string contains the substring `q`
            substrRegex = new RegExp(q, 'i');

            // iterate through the pool of strings and for any string that
            // contains the substring `q`, add it to the `matches` array
            $.each(strs, function (i, str) {
                if (substrRegex.test(str)) {
                    // the typeahead jQuery plugin expects suggestions to a
                    // JavaScript object, refer to typeahead docs for more info
                    matches.push({ value: str });
                }
            });

            cb(matches);
        };
    };

    var states = <%=raw ActsAsTaggableOn::Tag.all.pluck(:name)%>;

    var tags = $('input.stateinput');

    // initialize tagsinput for each stateinput classed input
    tags.tagsinput();

    $(tags).each(function (i, o) {
        // grab the input inside of tagsinput
        var taginput = $(o).tagsinput('input');



        // initialize typeahead for the tag input
        taginput.typeahead({
            hint: true,
            highlight: true,
            minLength: 1,
            autoselect: true
        },{
            name: 'states',
            displayKey: 'value',
            source: substringMatcher(states)
        }).bind('typeahead:selected', $.proxy(function (obj, datum) {
            // if the state is clicked, add it to tagsinput and clear input
            $(o).tagsinput('add', datum.value);
            taginput.typeahead('val', '');
        }));

        // erase any entered text on blur
        $(taginput).blur(function () {
            taginput.typeahead('val', '');
        });
    });

});

</script>